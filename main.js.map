{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/actions/movies.actions.ts","webpack:///./src/app/core/effects/movies.effects.ts","webpack:///./src/app/core/reducers/index.ts","webpack:///./src/app/core/reducers/movie.reducer.ts","webpack:///./src/app/shared/models/titles.ts","webpack:///./src/app/shared/services/movies.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./features/features.module\": [\n\t\t\"./src/app/features/features.module.ts\",\n\t\t\"features-features-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FeaturesModule } from './features/features.module';\n\nconst routes: Routes = [\n  { path: 'features', loadChildren: './features/features.module#FeaturesModule'},\n  { path: '', redirectTo: '/features', pathMatch: 'full' },\n  { path: '**', redirectTo: '/features' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'CinemaSite';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { environment } from './../environments/environment';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// INTERNAL MODULES\nimport { AppRoutingModule } from './app-routing.module';\n\n// COMPONENTS\nimport { AppComponent } from './app.component';\n\nimport { reducers, metaReducers } from './core/reducers';\nimport { MoviesEffects } from './core/effects/movies.effects';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    EffectsModule.forRoot([\n      MoviesEffects\n    ]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    BrowserAnimationsModule,\n    HttpModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Action } from '@ngrx/store';\r\nimport { Movie } from './../../shared/models/movie';\r\n\r\nexport enum MoviesActionTypes {\r\n    LoadMovies = '[Movie] Load Movies',\r\n    LoadMovies_SUCCESS = '[Movie] Load Movies Success',\r\n    LoadMovies_FAIL = '[Movie] Load Movies Fail',\r\n    AddMovie = '[Movie] Add Movie',\r\n    EditMovie = '[Movie] Edit Movie',\r\n    DeleteMovie = '[Movie] Delete Movie'\r\n}\r\n\r\nexport class LoadMovies implements Action {\r\n    readonly type = MoviesActionTypes.LoadMovies;\r\n}\r\n\r\nexport class LoadMoviesSuccess implements Action {\r\n    readonly type = MoviesActionTypes.LoadMovies_SUCCESS;\r\n\r\n    constructor(public movies: Movie[]) { }\r\n}\r\n\r\nexport class LoadMoviesFail implements Action {\r\n    readonly type = MoviesActionTypes.LoadMovies_FAIL;\r\n\r\n    constructor(public payload: string) { }\r\n}\r\n\r\nexport class AddMovie implements Action {\r\n    readonly type = MoviesActionTypes.AddMovie;\r\n\r\n    constructor(public movie: Movie) {\r\n    }\r\n}\r\n\r\nexport class EditMovie implements Action {\r\n    readonly type = MoviesActionTypes.EditMovie;\r\n\r\n    constructor(public movie: Movie) {\r\n    }\r\n}\r\n\r\nexport class DeleteMovie implements Action {\r\n    readonly type = MoviesActionTypes.DeleteMovie;\r\n\r\n    constructor(public movieId: string) {\r\n    }\r\n}\r\n\r\nexport type MoviesActions = LoadMovies | LoadMoviesSuccess | LoadMoviesFail | AddMovie | EditMovie | DeleteMovie;\r\n","import { Injectable, Pipe } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, mergeMap, catchError } from 'rxjs/operators';\r\nimport { AppState } from './../reducers/index';\r\nimport { MoviesService } from 'src/app/shared/services/movies.service';\r\nimport { Movie } from './../../shared/models/movie';\r\nimport * as MoviesActions from './../../core/actions/movies.actions';\r\n\r\n@Injectable()\r\nexport class MoviesEffects {\r\n\r\n    constructor(private moviesService: MoviesService, private actions$: Actions, private store: Store<AppState>) { }\r\n\r\n    @Effect()\r\n    loadMovies$: Observable<Action> = this.actions$.pipe(\r\n        ofType<MoviesActions.LoadMovies>(\r\n            MoviesActions.MoviesActionTypes.LoadMovies\r\n        ),\r\n        mergeMap((action: MoviesActions.LoadMovies) =>\r\n            this.moviesService.getMovies().pipe(\r\n                map((movies: Movie[]) => new MoviesActions.LoadMoviesSuccess(movies.map(res => {\r\n                    if (res['imdbID'] !== undefined && res['Response'] !== 'False') {\r\n                        const { imdbID, Title, Year, Runtime, Genre, Director, Plot, Poster } = res as any;\r\n                        // Genre = Genre.split(',');\r\n                      return { imdbID, Title, Year, Runtime, Genre, Director, Plot, Poster };\r\n                    }\r\n                  }))),\r\n                catchError(err => of(new MoviesActions.LoadMoviesFail(err)))\r\n            )\r\n        )\r\n    );\r\n\r\n    @Effect()\r\n    loadMoviesFromBackupDB$: Observable<Action> = this.actions$.pipe(\r\n        ofType<MoviesActions.LoadMoviesFail>(\r\n            MoviesActions.MoviesActionTypes.LoadMovies_FAIL\r\n        ),\r\n        mergeMap((action: MoviesActions.LoadMoviesFail) =>\r\n            this.moviesService.getMoviesDB().pipe(\r\n                map((movies: Movie[]) => new MoviesActions.LoadMoviesSuccess(movies.map(res => {\r\n                    if (res['imdbID'] !== undefined && res['Response'] !== 'False') {\r\n                        const { imdbID, Title, Year, Runtime, Genre, Director, Plot, Poster } = res as any;\r\n                        // Genre = Genre.split(',');\r\n                      return { imdbID, Title, Year, Runtime, Genre, Director, Plot, Poster };\r\n                    }\r\n                  }))),\r\n                catchError(err => of(new MoviesActions.LoadMoviesFail(err)))\r\n            )\r\n        )\r\n    );\r\n}\r\n","import {\r\n    ActionReducer,\r\n    ActionReducerMap,\r\n    createFeatureSelector,\r\n    createSelector,\r\n    MetaReducer\r\n  } from '@ngrx/store';\r\nimport { environment } from '../../../environments/environment';\r\nimport { MoviesState, moviesReducer } from './movie.reducer';\r\n\r\nexport interface AppState {\r\n    moviesState: MoviesState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n    moviesState: moviesReducer\r\n};\r\n\r\n\r\nexport const metaReducers: MetaReducer<AppState>[] = !environment.production ? [] : [];\r\n","import { MoviesActionTypes, MoviesActions } from '../actions/movies.actions';\r\nimport { Movie } from './../../shared/models/movie';\r\n\r\n\r\nexport interface MoviesState {\r\n    movies: Movie[];\r\n}\r\n\r\nexport const initialState: MoviesState = {\r\n    movies: [],\r\n};\r\n\r\nexport function moviesReducer(state = initialState, action: MoviesActions): MoviesState {\r\n    switch (action.type) {\r\n        case MoviesActionTypes.LoadMovies_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                movies: action.movies\r\n            };\r\n        }\r\n        case MoviesActionTypes.AddMovie: {\r\n            return {\r\n                ...state,\r\n                movies: [...state.movies, action.movie]\r\n            };\r\n        }\r\n\r\n        case MoviesActionTypes.EditMovie: {\r\n            const { movies } = state;\r\n            const newMoviesState = movies.map(movie => {\r\n                if (movie.imdbID !== action.movie.imdbID) {\r\n                    return movie;\r\n                } else {\r\n                    return action.movie;\r\n                }\r\n            });\r\n            return {\r\n                ...state,\r\n                movies: [...newMoviesState]\r\n            };\r\n        }\r\n\r\n        case MoviesActionTypes.DeleteMovie: {\r\n            const { movies } = state;\r\n            const newMoviesState = movies.filter(movie => movie.imdbID !== action.movieId);\r\n            return {\r\n                ...state,\r\n                movies: [...newMoviesState]\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const titles = [\r\n    'A Sea Cave Near Lisbon',\r\n    'A Woman\\'s Way',\r\n    'Aladdin and the Wonderful Lamp',\r\n    'Alice in Wonderland',\r\n    'All I See Is You',\r\n    'Ana mon amour',\r\n    'Apocalypto',\r\n    'Aquaman',\r\n    'Awasarn Lok Suay',\r\n    'Annihilation',\r\n    'Azorian: The Raising of the K-129',\r\n    'B-Movie: The Shooting of \"Farmhouse Massacre\"',\r\n    'Ballet libella',\r\n    'Ben Hur',\r\n    'Bin lim mai ching',\r\n    'Bird Box',\r\n    'Black Mirror: Bandersnatch',\r\n    'Black',\r\n    'Brace for Impact: The Chesley B. Sullenberger Story',\r\n    'Brown Bag Diaries: Ridin the Blinds in B Minor',\r\n    'Bumblebee',\r\n    'Casey at the Bat',\r\n    'Chow lok yuen',\r\n    'Chuye Dile Mon',\r\n    'Cinderella',\r\n    'Captain Marvel',\r\n    'Criminal Minds',\r\n    'Danse fleur de lotus',\r\n    'Doctor Who',\r\n    'Detective K: Secret of the Living Dead',\r\n    'Echo Jew Gong Lok',\r\n    'Ella Lola, a la Trilby',\r\n    'Escape Room',\r\n    'Gefsi apo... Ellada!',\r\n    'Glass',\r\n    'Godard Mon Amour',\r\n    'Grandma\\'s Reading Glass',\r\n    'Green Book',\r\n    'Hamlet',\r\n    'Hellboy',\r\n    'Halloween',\r\n    'Hereditary',\r\n    'Hated: GG Allin & the Murder Junkies',\r\n    'How to Train Your Dragon: The Hidden World',\r\n    'I Theia Apo to Chicago',\r\n    'K-19: The Widowmaker',\r\n    'K-20: The Fiend with Twenty Faces',\r\n    'K-On! The Movie',\r\n    'L\\'aveugle',\r\n    'Learning to Drive',\r\n    'No Escape Room',\r\n    'Ma Vie en Rose',\r\n    'Macbeth',\r\n    'Mon Mon Mon Monsters',\r\n    'Mulholland Drive',\r\n    'Now You See Me',\r\n    'Mary Queen of Scots',\r\n    'Mowgli',\r\n    'Mission: Impossible - Fallout',\r\n    'O anthropos pou gyrise apo ta piata!',\r\n    'O anthropos pou gyrise apo ti zesti',\r\n    'Robbery Under Arms',\r\n    'Roma',\r\n    'Secreto de confesión',\r\n    'See No Evil',\r\n    'Sex Drive',\r\n    'Split',\r\n    'Playdate',\r\n    'Stan & Ollie',\r\n    'The Call of the Wild',\r\n    'The Enchanted Drawing',\r\n    'The Exorcism of Emily Rose',\r\n    'The Favourite',\r\n    'The Gospel According to Philip K. Dick',\r\n    'The Great K & A Train Robbery',\r\n    'The House That Jack Built',\r\n    'The Kids Are All Right',\r\n    'The Legacy',\r\n    'Twisted',\r\n    'Web of Lies',\r\n    'The Merchant of Venice',\r\n    'The Mule',\r\n    'The Pioneers',\r\n    'The Reckoning',\r\n    'The Snowman',\r\n    'Truth or Dare',\r\n    'The World According to Ion B.',\r\n    'Titans',\r\n    'Transformations',\r\n    'Uncle Tom\\'s Cabin',\r\n    'Upside',\r\n    'Venom',\r\n    'Vice',\r\n    'Výstavní párkar a lepic plakátù',\r\n    'You',\r\n];\r\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport * as TITELS from '../models/titles';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/core/reducers';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesService {\n  private baseUrl = 'https://www.omdbapi.com/?apikey=ea22e40a&type=movie&';\n\n  constructor(private store: Store<AppState>, private http: Http) {}\n\n  public getMovies() {\n    let movieArray = [];\n    TITELS.titles.forEach(title => {\n      const movie = this.http\n        .get(`${this.baseUrl}t=${title}`)\n        .pipe(map(res => res.json()));\n      movieArray = [...movieArray, movie];\n    });\n    return forkJoin(movieArray);\n  }\n\n  public getMoviesDB(): Observable<any> {\n    return this.http.get('./assets/db/movies_db.json').pipe(map(res => res.json()));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}